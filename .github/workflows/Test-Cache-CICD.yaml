name: Test Cache CI/CD

on:
  push:
    branches:
      - 'dev'
  pull_request:
    branches:
      - 'dev'
  workflow_dispatch:

env:
  CI: false
  env_dev: ${{ secrets.ENV_DEV }}
  env_npmrc: ${{ secrets.ENV_NPMRC }}

jobs:
  deploy:
    name: Build and Push Image to Docker Hub
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'action') || contains(github.event.pull_request.title, 'action') || github.event_name == 'workflow_dispatch'

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
     
      - name: import env file
        run: |
          touch ./.env && echo "$env_dev" >> ./.env && \
          touch ./.npmrc && echo "$env_npmrc" >> ./.npmrc

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'

      # Cache pnpm store
      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # Install dependencies using pnpm
      - name: Install dependencies
        run: |
          npm install -g pnpm@8.14.1
          pnpm install

      # Cache Nx build artifacts
      - name: Cache Nx build
        uses: actions/cache@v3
        with:
          path: .nx/cache
          key: ${{ runner.os }}-nx-cache-${{ hashFiles('**/*') }}
          restore-keys: |
            ${{ runner.os }}-nx-cache-

      # Build the application using Nx
      - name: Build applications
        run: |
          npx nx reset
          pnpm build:all

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-buildx-

      # Build and push Docker image
      - name: Build and push Docker image
        id: build-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.rahat-ui
        #   push: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
          push: false
          tags: images.tag
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,new=true
